#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os
import sys
from osgeo import ogr as myogr
import gnomevfs
from mapnik import *

def mapnikThumbnail(inFile, outFile, size):
	localShapePath = gnomevfs.get_local_path_from_uri(inFile)
	ogrShapeFile = myogr.Open(localShapePath)
	layerInfo = ogrShapeFile.GetLayer(0)
	srsString = layerInfo.GetSpatialRef()
	proj4String = srsString.ExportToProj4()	
	# Map            
	m = Map(size,size,proj4String)
	m.background = Color('white')

	# Styles
	#poly = PolygonSymbolizer(Color('lavender'))
	#line = LineSymbolizer(Color('#000000'),1)
	#s,r = Style(),Rule()
	#r.symbols.extend([line])
	#s.rules.append(r)
	style = getStyle("")
	m.append_style('Default',style)

	# Layer
	lyr = Layer('world')
	lyr.datasource = Shapefile(file=localShapePath)
	lyr.srs = proj4String
	#'+proj=tmerc +lat_0=0 +lon_0=18.05779 +k=0.99999425 +x_0=100178.1808 +y_0=-6500614.7836 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs'
	lyr.styles.append('Default')
	m.layers.append(lyr)

	# Render
	m.zoom_to_box(lyr.envelope())
	render_to_file(m, outFile, 'png')

##
# Add style information to map
# @param layer OGR Layer
#
def getStyle(layer):
	# Todo l채s in fr책n xml-fil baserat p책 geometrityp fr책n OGR-lager
	#geometryColumnValue = layer.GetLayerDefn().GetGeomType()
	#if   geometryColumnValue == 0: geometryColumn = "Unknown"
	#elif geometryColumnValue == 1: geometryColumn = "Point"
	#elif geometryColumnValue == 2: geometryColumn = "LineString"
	#elif geometryColumnValue == 3: geometryColumn = "Polygon"
	#elif geometryColumnValue == 4: geometryColumn = "MultiPoint"
	#elif geometryColumnValue == 5: geometryColumn = "MultiLineString"
	#elif geometryColumnValue == 6: geometryColumn = "MultiPolygon"
	#elif geometryColumnValue == 7: geometryColumn = "GeometryCollection"
		
	style,rule = Style(),Rule()
	rule.symbols.append(PointSymbolizer())
	rule.symbols.append(LineSymbolizer(Color('#000000'),1))
	#rule.symbols.append(PolygonSymbolizer(Color('#000000')))
	style.rules.append(rule)
	return style


def main():
    input = sys.argv[1]
    output = sys.argv[2]
    size = int(sys.argv[3])
    mapnikThumbnail(input, output, size)	

    
if __name__ == "__main__":
    main()
